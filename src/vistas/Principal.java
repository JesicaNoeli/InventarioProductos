/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import static com.sun.org.apache.xalan.internal.xsltc.compiler.sym.OR;
import inventario.Conexion;
import inventario.Producto;
import static inventario.Producto.formatearDecimales;
import inventario.ProductoData;
import inventario.ProductoPerecedero;
import inventario.ProductoPerecederoData;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collection;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.LinkedList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.Collectors;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import static jdk.internal.org.objectweb.asm.commons.GeneratorAdapter.OR;

/**
 *
 * @author Popa
 */
public class Principal extends javax.swing.JInternalFrame {
     private Conexion conexion;
     private ProductoData productoData;
     private ProductoPerecederoData productoPerecederoData;
    private DefaultTableModel modelo;
    private ArrayList <Producto> todosLosProductos;
    
    private ArrayList <ProductoPerecedero> todosLosProductosP;
    private ArrayList todosProductos;
     

    /**
     * Creates new form Principal
     */
    public Principal() {
        
             initComponents();
             modelo = new DefaultTableModel();
            
              try {
                  
             conexion = new Conexion();
             productoData = new ProductoData(conexion);
             productoPerecederoData = new ProductoPerecederoData(conexion);
            
         } catch (ClassNotFoundException ex) {
             Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
         }
        ocultarTitulo();
             vencimiento.setVisible(false); 
             venc.setVisible(false);
             cabezeraTabla();
             llenarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        escritorio = new javax.swing.JDesktopPane();
        fondo = new javax.swing.JPanel();
        pesta単as = new javax.swing.JTabbedPane();
        venta = new javax.swing.JPanel();
        ganancia1 = new javax.swing.JPanel();
        salir1 = new javax.swing.JButton();
        producto1 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        marca1 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        codigo1 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        pFinal1 = new javax.swing.JTextField();
        editar1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel20 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        guardar1 = new javax.swing.JButton();
        lista = new javax.swing.JPanel();
        salir3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listado = new javax.swing.JTable();
        filt = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        comboF = new javax.swing.JComboBox<>();
        principal = new javax.swing.JPanel();
        cerrar = new javax.swing.JButton();
        producto = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Marca = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        Codigo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        costo = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        pFinal = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        stock = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        Ganancia = new javax.swing.JTextField();
        guardar = new javax.swing.JButton();
        editar = new javax.swing.JButton();
        venc = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        si = new javax.swing.JRadioButton();
        no = new javax.swing.JRadioButton();
        limpiar = new javax.swing.JButton();
        vencimiento = new com.toedter.calendar.JDateChooser();
        calcular = new javax.swing.JButton();
        buscar = new javax.swing.JButton();

        setBackground(new java.awt.Color(153, 153, 153));
        setBorder(null);
        setPreferredSize(new java.awt.Dimension(600, 700));
        getContentPane().setLayout(null);

        escritorio.setPreferredSize(new java.awt.Dimension(600, 700));

        fondo.setBackground(new java.awt.Color(153, 153, 153));
        fondo.setMinimumSize(new java.awt.Dimension(600, 700));
        fondo.setPreferredSize(new java.awt.Dimension(600, 700));
        fondo.setLayout(null);

        pesta単as.setBackground(new java.awt.Color(0, 0, 0));
        pesta単as.setFont(new java.awt.Font("Arial", 3, 12)); // NOI18N
        pesta単as.setPreferredSize(new java.awt.Dimension(600, 700));

        venta.setBackground(new java.awt.Color(204, 204, 255));
        venta.setFont(new java.awt.Font("Arial", 3, 12)); // NOI18N
        venta.setPreferredSize(new java.awt.Dimension(600, 700));

        ganancia1.setBackground(new java.awt.Color(204, 204, 255));
        ganancia1.setPreferredSize(new java.awt.Dimension(600, 700));
        ganancia1.setLayout(null);

        salir1.setBackground(new java.awt.Color(204, 204, 255));
        salir1.setFont(new java.awt.Font("Arial", 3, 12)); // NOI18N
        salir1.setText("Salir");
        salir1.setToolTipText("");
        ganancia1.add(salir1);
        salir1.setBounds(350, 520, 59, 23);

        producto1.setToolTipText("Obligatorio");
        producto1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                producto1ActionPerformed(evt);
            }
        });
        ganancia1.add(producto1);
        producto1.setBounds(190, 60, 180, 30);

        jLabel11.setFont(new java.awt.Font("Arial", 3, 12)); // NOI18N
        jLabel11.setText("Producto");
        ganancia1.add(jLabel11);
        jLabel11.setBounds(40, 80, 52, 15);

        jLabel12.setFont(new java.awt.Font("Arial", 3, 12)); // NOI18N
        jLabel12.setText("Marca");
        ganancia1.add(jLabel12);
        jLabel12.setBounds(40, 140, 37, 15);

        marca1.setToolTipText("Obligatorio");
        marca1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                marca1ActionPerformed(evt);
            }
        });
        ganancia1.add(marca1);
        marca1.setBounds(190, 120, 180, 30);

        jLabel13.setFont(new java.awt.Font("Arial", 3, 12)); // NOI18N
        jLabel13.setText("Codigo");
        ganancia1.add(jLabel13);
        jLabel13.setBounds(40, 20, 40, 15);

        codigo1.setToolTipText("Ingrese Codigo");
        ganancia1.add(codigo1);
        codigo1.setBounds(190, 0, 180, 30);

        jLabel15.setFont(new java.awt.Font("Arial", 3, 12)); // NOI18N
        jLabel15.setText("Precio ");
        ganancia1.add(jLabel15);
        jLabel15.setBounds(40, 190, 40, 15);

        pFinal1.setToolTipText("Opcional");
        pFinal1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pFinal1ActionPerformed(evt);
            }
        });
        ganancia1.add(pFinal1);
        pFinal1.setBounds(190, 180, 180, 30);

        editar1.setFont(new java.awt.Font("Arial", 3, 12)); // NOI18N
        editar1.setText("Editar");
        ganancia1.add(editar1);
        editar1.setBounds(100, 520, 67, 23);

        jScrollPane2.setViewportView(jList1);

        ganancia1.add(jScrollPane2);
        jScrollPane2.setBounds(30, 240, 355, 170);

        jLabel20.setFont(new java.awt.Font("Arial", 3, 12)); // NOI18N
        jLabel20.setText("Total");
        ganancia1.add(jLabel20);
        jLabel20.setBounds(230, 450, 39, 20);

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });
        ganancia1.add(jTextField3);
        jTextField3.setBounds(290, 440, 97, 30);

        jButton4.setFont(new java.awt.Font("Arial", 3, 12)); // NOI18N
        jButton4.setText("Limpiar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        ganancia1.add(jButton4);
        jButton4.setBounds(230, 520, 75, 23);

        guardar1.setFont(new java.awt.Font("Arial", 3, 12)); // NOI18N
        guardar1.setText("Guardar");

        javax.swing.GroupLayout ventaLayout = new javax.swing.GroupLayout(venta);
        venta.setLayout(ventaLayout);
        ventaLayout.setHorizontalGroup(
            ventaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ventaLayout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addComponent(guardar1)
                .addContainerGap(430, Short.MAX_VALUE))
            .addGroup(ventaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ventaLayout.createSequentialGroup()
                    .addGap(0, 112, Short.MAX_VALUE)
                    .addComponent(ganancia1, javax.swing.GroupLayout.PREFERRED_SIZE, 483, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        ventaLayout.setVerticalGroup(
            ventaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ventaLayout.createSequentialGroup()
                .addGap(0, 609, Short.MAX_VALUE)
                .addComponent(guardar1)
                .addGap(39, 39, 39))
            .addGroup(ventaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ventaLayout.createSequentialGroup()
                    .addGap(0, 87, Short.MAX_VALUE)
                    .addComponent(ganancia1, javax.swing.GroupLayout.PREFERRED_SIZE, 584, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pesta単as.addTab("Registrar Venta", venta);

        lista.setBackground(new java.awt.Color(204, 204, 255));
        lista.setPreferredSize(new java.awt.Dimension(600, 700));

        salir3.setBackground(new java.awt.Color(204, 204, 255));
        salir3.setFont(new java.awt.Font("Arial", 3, 12)); // NOI18N
        salir3.setText("Salir");
        salir3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salir3ActionPerformed(evt);
            }
        });

        listado.setFont(new java.awt.Font("Arial", 3, 12)); // NOI18N
        listado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Codigo", "Marca", "Tipo", "Costo", "Precio Final ", "Stock", "Vence"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(listado);

        filt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                filtKeyPressed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Arial", 3, 12)); // NOI18N
        jButton1.setText("Filtrar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Arial", 3, 12)); // NOI18N
        jLabel8.setText("Filtrar por");

        comboF.setMaximumRowCount(3);
        comboF.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todo", "Marca", "Tipo", " ", " " }));
        comboF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboFActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout listaLayout = new javax.swing.GroupLayout(lista);
        lista.setLayout(listaLayout);
        listaLayout.setHorizontalGroup(
            listaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listaLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(comboF, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(filt)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(29, 29, 29))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 595, Short.MAX_VALUE)
            .addGroup(listaLayout.createSequentialGroup()
                .addGap(261, 261, 261)
                .addComponent(salir3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        listaLayout.setVerticalGroup(
            listaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, listaLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(listaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(comboF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(filt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 543, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(salir3)
                .addGap(37, 37, 37))
        );

        pesta単as.addTab("Lista de Productos", lista);

        principal.setBackground(new java.awt.Color(204, 204, 255));
        principal.setPreferredSize(new java.awt.Dimension(600, 700));
        principal.setLayout(null);

        cerrar.setBackground(new java.awt.Color(204, 204, 255));
        cerrar.setFont(new java.awt.Font("Arial", 3, 12)); // NOI18N
        cerrar.setText("Salir");
        cerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarActionPerformed(evt);
            }
        });
        principal.add(cerrar);
        cerrar.setBounds(470, 610, 59, 23);

        producto.setToolTipText("Obligatorio");
        producto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productoActionPerformed(evt);
            }
        });
        principal.add(producto);
        producto.setBounds(328, 63, 180, 30);

        jLabel1.setFont(new java.awt.Font("Arial", 3, 12)); // NOI18N
        jLabel1.setText("Producto");
        principal.add(jLabel1);
        jLabel1.setBounds(150, 70, 52, 15);

        jLabel2.setFont(new java.awt.Font("Arial", 3, 12)); // NOI18N
        jLabel2.setText("Marca");
        principal.add(jLabel2);
        jLabel2.setBounds(150, 160, 37, 15);

        Marca.setToolTipText("Obligatorio");
        Marca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MarcaActionPerformed(evt);
            }
        });
        principal.add(Marca);
        Marca.setBounds(328, 157, 180, 30);

        jLabel3.setFont(new java.awt.Font("Arial", 3, 12)); // NOI18N
        jLabel3.setText("Codigo");
        principal.add(jLabel3);
        jLabel3.setBounds(150, 210, 40, 15);

        Codigo.setToolTipText("Obligatorio");
        principal.add(Codigo);
        Codigo.setBounds(328, 208, 180, 30);

        jLabel4.setFont(new java.awt.Font("Arial", 3, 12)); // NOI18N
        jLabel4.setText("Precio Costo");
        principal.add(jLabel4);
        jLabel4.setBounds(150, 260, 74, 15);

        costo.setText("0.00");
        costo.setToolTipText("Obligatorio");
        costo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                costoActionPerformed(evt);
            }
        });
        principal.add(costo);
        costo.setBounds(328, 254, 180, 30);

        jLabel5.setFont(new java.awt.Font("Arial", 3, 12)); // NOI18N
        jLabel5.setText("Precio Final");
        principal.add(jLabel5);
        jLabel5.setBounds(150, 400, 67, 15);

        pFinal.setText("0.00");
        pFinal.setToolTipText("Opcional");
        pFinal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pFinalActionPerformed(evt);
            }
        });
        principal.add(pFinal);
        pFinal.setBounds(328, 399, 81, 30);

        jLabel6.setFont(new java.awt.Font("Arial", 3, 12)); // NOI18N
        jLabel6.setText("Stock");
        principal.add(jLabel6);
        jLabel6.setBounds(150, 350, 33, 15);

        stock.setToolTipText("Obligatorio");
        principal.add(stock);
        stock.setBounds(328, 349, 180, 30);

        jLabel7.setFont(new java.awt.Font("Arial", 3, 12)); // NOI18N
        jLabel7.setText("Ganancia %");
        principal.add(jLabel7);
        jLabel7.setBounds(150, 300, 68, 20);

        Ganancia.setText("0");
        Ganancia.setToolTipText("Opcional");
        principal.add(Ganancia);
        Ganancia.setBounds(328, 302, 180, 30);

        guardar.setFont(new java.awt.Font("Arial", 3, 12)); // NOI18N
        guardar.setText("Guardar");
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarActionPerformed(evt);
            }
        });
        principal.add(guardar);
        guardar.setBounds(100, 610, 79, 23);

        editar.setFont(new java.awt.Font("Arial", 3, 12)); // NOI18N
        editar.setText("Editar");
        editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarActionPerformed(evt);
            }
        });
        principal.add(editar);
        editar.setBounds(240, 610, 67, 23);

        venc.setFont(new java.awt.Font("Arial", 3, 12)); // NOI18N
        venc.setText("Vencimiento");
        principal.add(venc);
        venc.setBounds(150, 470, 72, 15);

        jLabel9.setFont(new java.awt.Font("Arial", 3, 12)); // NOI18N
        jLabel9.setText("Perecedero?");
        principal.add(jLabel9);
        jLabel9.setBounds(150, 120, 74, 15);

        si.setText("si");
        si.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                siActionPerformed(evt);
            }
        });
        principal.add(si);
        si.setBounds(460, 110, 33, 30);

        no.setText("no");
        no.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noActionPerformed(evt);
            }
        });
        principal.add(no);
        no.setBounds(340, 110, 37, 30);

        limpiar.setFont(new java.awt.Font("Arial", 3, 12)); // NOI18N
        limpiar.setText("Limpiar");
        limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarActionPerformed(evt);
            }
        });
        principal.add(limpiar);
        limpiar.setBounds(360, 610, 75, 23);
        principal.add(vencimiento);
        vencimiento.setBounds(328, 452, 180, 30);

        calcular.setFont(new java.awt.Font("Arial", 3, 12)); // NOI18N
        calcular.setText("Calcular");
        calcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calcularActionPerformed(evt);
            }
        });
        principal.add(calcular);
        calcular.setBounds(430, 400, 81, 30);

        buscar.setIcon(new javax.swing.ImageIcon("D:\\icon\\search2.png")); // NOI18N
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });
        principal.add(buscar);
        buscar.setBounds(518, 208, 30, 30);

        pesta単as.addTab("Registrar Producto", principal);

        fondo.add(pesta単as);
        pesta単as.setBounds(0, 0, 600, 700);

        escritorio.add(fondo);
        fondo.setBounds(0, 0, 600, 674);

        getContentPane().add(escritorio);
        escritorio.setBounds(0, 0, 600, 674);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void productoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_productoActionPerformed

    private void MarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MarcaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MarcaActionPerformed

    private void pFinalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pFinalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pFinalActionPerformed

    private void producto1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_producto1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_producto1ActionPerformed

    private void marca1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_marca1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_marca1ActionPerformed

    private void pFinal1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pFinal1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pFinal1ActionPerformed

    private void siActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_siActionPerformed
        no.setSelected(false);
         vencimiento.setVisible(true);
         venc.setVisible(true);
         setConfiguracionJDateChooser(); 
    }//GEN-LAST:event_siActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarActionPerformed
       if (producto.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, " Producto no puede estar vacio ");
        }else if (Marca.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, " Marca no puede estar vacio ");
        } else if (Codigo.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, " Codigo no puede estar vacio ");
        }else if (!validarCampoNumEntero(Codigo.getText())|| !validarLong(Codigo.getText())) {
                JOptionPane.showMessageDialog(null, "Codigo solo ingrese valores num辿ricos");
        }else if (costo.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, " Precio Costo no puede estar vacio ");
        }else if (!validarCampoPrecio(costo.getText())) {
                JOptionPane.showMessageDialog(null, "Precio Costo solo ingrese valores num辿ricos");
        }else if (!validarCampoNumEntero(Ganancia.getText())) {
                JOptionPane.showMessageDialog(null, "Ganancia solo ingrese valores num辿ricos");
        }else if (!validarCampoPrecio(pFinal.getText())) {
                JOptionPane.showMessageDialog(null, "Precio Final solo ingrese valores num辿ricos");
        } else if (stock.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, " Stock no puede estar vacio ");
        }else if (!validarCampoNumEntero(stock.getText())) {
                JOptionPane.showMessageDialog(null, "Stock solo ingrese valores num辿ricos");
        }else{
           if(si.isSelected()){  
        LocalDate fechaVencimiento = formatearFecha(vencimiento.getDate());
        String codigo = Codigo.getText();
        String marca = Marca.getText();
        String tipo = producto.getText();
        double precioCosto = Double.parseDouble(costo.getText());
        int porcentajeGanancia = Integer.parseInt(Ganancia.getText());
        double precioFinal = Double.parseDouble(pFinal.getText());
        int Stock = Integer.parseInt (stock.getText());
            if (!productoPerecederoData.isCodigoExistenteP(codigo)){
         ProductoPerecedero productoP = new ProductoPerecedero(fechaVencimiento,codigo,marca,tipo,precioCosto,precioFinal,Stock,porcentajeGanancia );  
         productoPerecederoData.guardarProductoPerecedero(productoP);
          JOptionPane.showMessageDialog(null, "Producto guardado");
           }else{
            JOptionPane.showMessageDialog(null, " El producto ya existe ");    
            }
           }else{
        String codigo = Codigo.getText();
        String marca = Marca.getText();
        String tipo = producto.getText();
        double precioCosto = Double.parseDouble(costo.getText());
        int porcentajeGanancia = Integer.parseInt(Ganancia.getText()); 
        double precioFinal = Double.parseDouble(pFinal.getText());
        int Stock = Integer.parseInt (stock.getText());
          if (!productoData.isCodigoExistente(codigo)){  
          Producto produc = new Producto (codigo,marca,tipo,precioCosto,precioFinal,Stock,porcentajeGanancia);
         productoData.guardarProducto(produc);
         JOptionPane.showMessageDialog(null, "Producto guardado");
            } else{
           JOptionPane.showMessageDialog(null, " El producto ya existe ");     
          }  
 }
      } 
       
    }//GEN-LAST:event_guardarActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void noActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noActionPerformed
       si.setSelected(false);
        vencimiento.setVisible(false);
        venc.setVisible(false);
    }//GEN-LAST:event_noActionPerformed

    private void costoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_costoActionPerformed
        pFinal.setText(title);
    }//GEN-LAST:event_costoActionPerformed

    private void calcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calcularActionPerformed
        campoPrecio();
    }//GEN-LAST:event_calcularActionPerformed

    private void editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarActionPerformed
       if (!validarCampoNumEntero(Codigo.getText())|| !validarLong(Codigo.getText())) {
                JOptionPane.showMessageDialog(null, "Codigo solo ingrese valores num辿ricos");
        }else{
        String codigo = Codigo.getText();
        Producto produc = productoData.buscarProducto(codigo);
       if (produc != null) {
          int resp = JOptionPane.showConfirmDialog(null, "多Esta seguro que quiere guardar los cambios?", "Alerta!", JOptionPane.YES_NO_OPTION);
      if (resp != 1) {
        produc.setCodigo(Codigo.getText());
        produc.setMarca(Marca.getText());
        produc.setTipo(producto.getText());
        produc.setPrecioCosto(Double.parseDouble(costo.getText()));
        produc.setPorcentajeGanancia(Integer.parseInt(Ganancia.getText())); 
        produc.setPrecioFinal(Double.parseDouble(pFinal.getText()));
        produc.setStock(Integer.parseInt (stock.getText())); 
         productoData.editarProducto(produc);
         JOptionPane.showMessageDialog(null, " Datos editados! ");
        }
      }else{
        ProductoPerecedero producP = productoPerecederoData.buscarProductoPerecedero(codigo);
      if (producP != null) {
          int resp = JOptionPane.showConfirmDialog(null, "多Esta seguro que quiere guardar los cambios?", "Alerta!", JOptionPane.YES_NO_OPTION);
      if (resp != 1) {
        producP.setFechaVencimiento(formatearFecha(vencimiento.getDate()));
        producP.setCodigo(Codigo.getText());
        producP.setMarca(Marca.getText());
        producP.setTipo(producto.getText());
        producP.setPrecioCosto(Double.parseDouble(costo.getText()));
        producP.setPorcentajeGanancia(Integer.parseInt(Ganancia.getText())); 
        producP.setPrecioFinal(Double.parseDouble(pFinal.getText()));
        producP.setStock(Integer.parseInt (stock.getText())); 
         productoPerecederoData.editarProductoPerecedero(producP);
         JOptionPane.showMessageDialog(null, " Datos editados! ");
      }
       }else{
          JOptionPane.showMessageDialog(null, "El codigo ingresado no existe ");
      }
      }
       }
    }//GEN-LAST:event_editarActionPerformed

    private void cerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarActionPerformed
       System.exit(0);
    }//GEN-LAST:event_cerrarActionPerformed

    private void limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarActionPerformed
       producto.setText("");
       no.isSelected();
       Marca.setText("");
       Codigo.setText("");
       costo.setText(String.valueOf(0.00));
       Ganancia.setText(String.valueOf(0));
       stock.setText("");
       pFinal.setText(String.valueOf(0.00));
       setConfiguracionJDateChooser();
    }//GEN-LAST:event_limpiarActionPerformed

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
     String codigo = Codigo.getText();
        Producto produc = productoData.buscarProducto(codigo);
       if (produc != null) {
       producto.setText(produc.getTipo());
       Marca.setText(produc.getMarca());
       costo.setText(String.valueOf(produc.getPrecioCosto()));
       Ganancia.setText(String.valueOf(produc.getPorcentajeGanancia()));
       stock.setText(String.valueOf(produc.getStock()));
       pFinal.setText(String.valueOf(produc.getPrecioFinal())); 
       }else{
       ProductoPerecedero prodp = productoPerecederoData.buscarProductoPerecedero(codigo);
       if(prodp != null){
       producto.setText(prodp.getTipo());
       Marca.setText(prodp.getMarca());
       costo.setText(String.valueOf(prodp.getPrecioCosto()));
       Ganancia.setText(String.valueOf(prodp.getPorcentajeGanancia()));
       stock.setText(String.valueOf(prodp.getStock()));
       pFinal.setText(String.valueOf(prodp.getPrecioFinal()));
       vencimiento.setVisible(true);
         venc.setVisible(true);
       Date date = java.sql.Date.valueOf(prodp.getFechaVencimiento());
       vencimiento.setDate(date);
        }else{
          JOptionPane.showMessageDialog(null, "El codigo ingresado no existe ");  
        }
           
       }
    }//GEN-LAST:event_buscarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
   if(comboF.getSelectedItem() == "Todo"){
      JOptionPane.showMessageDialog(null, "Seleccione un filtro "); 
   }
        
     String filtro = filt.getText();
 
  if(comboF.getSelectedItem() == "Marca"){
      borraFilasTabla();
   todosLosProductos = (ArrayList) productoData.inStockMarca(filtro);
      todosLosProductosP = (ArrayList) productoPerecederoData.inStockMarca(filtro);
      
      for (Producto p :todosLosProductos){
       modelo.addRow(new Object[]{p.getCodigo(),p.getMarca(),p.getTipo(),p.getPrecioCosto(), p.getPrecioFinal(), p.getStock()});
      }
      for (ProductoPerecedero pp :todosLosProductosP){
     modelo.addRow(new Object[] {pp.getCodigo(),pp.getMarca(),pp.getTipo(),pp.getPrecioCosto(),pp.getPrecioFinal(),pp.getStock(),pp.getFechaVencimiento()});
              
      }
  
  }if(comboF.getSelectedItem() == "Tipo"){
      borraFilasTabla();
   todosLosProductos = (ArrayList) productoData.inStockTipo(filtro);
     todosLosProductosP = (ArrayList) productoPerecederoData.inStockTipo(filtro);
      
      for (Producto p :todosLosProductos){
       modelo.addRow(new Object[]{p.getCodigo(),p.getMarca(),p.getTipo(),p.getPrecioCosto(), p.getPrecioFinal(), p.getStock()});
      }
     for (ProductoPerecedero pp :todosLosProductosP){
    modelo.addRow(new Object[] {pp.getCodigo(),pp.getMarca(),pp.getTipo(),pp.getPrecioCosto(),pp.getPrecioFinal(),pp.getStock(),pp.getFechaVencimiento()});
            
  }
 
  }
      
    }//GEN-LAST:event_jButton1ActionPerformed

    private void filtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_filtKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_filtKeyPressed

    private void comboFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboFActionPerformed
        // TODO add your handling code here:
     if(comboF.getSelectedItem() == "Todo"){
       llenarTabla();  
     }   
    }//GEN-LAST:event_comboFActionPerformed

    private void salir3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salir3ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_salir3ActionPerformed
 private boolean validarCampoPrecio(String value) {
        try {
            double num = Double.parseDouble(value);
            return true;
        } catch (Exception ex) {
            return false;
        }
    }
 private boolean validarLong(String value){
     try{
        Long num = Long.parseLong(value);
        return true;
     } catch (Exception ex){
         return false;
     }
 }
 
 private boolean validarCampoNumEntero(String value) {
        try {
            int num = Integer.parseInt(value);
            return true;
        } catch (Exception ex) {
            return false;
        }
    }
  public LocalDate formatearFecha(Date date) {
        SimpleDateFormat formato = new SimpleDateFormat("YYYY-MM-dd");
        LocalDate fechaFormateada = LocalDate.parse(formato.format(date));
        return fechaFormateada;
    }
  public void setConfiguracionJDateChooser() {
        // Setea fecha actual
        Calendar toDay = new GregorianCalendar();
        vencimiento.setCalendar(toDay);
        
        // Setea fecha m鱈nima
        vencimiento.setMinSelectableDate(toDay.getTime());
        
        // Desactiva edici坦n y carga manual de fechas
        //((JTextField) this.vencimiento.getDateEditor()).setEditable(false);
        }
  public void ocultarTitulo(){
 BasicInternalFrameUI bi = (BasicInternalFrameUI) this.getUI();   
 bi.setNorthPane(null);
 
}
  public void campoPrecio(){
        int porcentajeGanancia = Integer.parseInt(Ganancia.getText());
        double precioCosto = Double.parseDouble(costo.getText());
     double precio = formatearDecimales(precioCosto+(precioCosto*porcentajeGanancia/100),2);
     pFinal.setText(String.valueOf(precio));
  }
  
  public void llenarTabla(){
      todosLosProductos = (ArrayList) productoData.obtenerProductos();
      todosLosProductosP = (ArrayList) productoPerecederoData.obtenerProductosP();
      
      for (Producto p :todosLosProductos){
       modelo.addRow(new Object[]{p.getCodigo(),p.getMarca(),p.getTipo(),p.getPrecioCosto(), p.getPrecioFinal(), p.getStock()});
      }
      for (ProductoPerecedero pp :todosLosProductosP){
     modelo.addRow(new Object[] {pp.getCodigo(),pp.getMarca(),pp.getTipo(),pp.getPrecioCosto(),pp.getPrecioFinal(),pp.getStock(),pp.getFechaVencimiento()});
              
      }
  }
   public void borraFilasTabla() {

        int a = modelo.getRowCount() - 1;

        for (int i = a; i >= 0; i--) {
            modelo.removeRow(i);
         }
  
  }
  
  public void cabezeraTabla() {
        //Titulos de Columnas
        ArrayList<Object> columnas = new ArrayList<Object>();
        columnas.add("Codigo");
        columnas.add("Marca");
        columnas.add("Tipo");
        columnas.add("Costo");
        columnas.add("Precio");
        columnas.add("Stock");
        columnas.add("Vence");
                

        for (Object it : columnas) {
            modelo.addColumn(it);
        }
        listado.setModel(modelo);
    }
  public void filtrar(String filtro, int columna){
  modelo = (DefaultTableModel) listado.getModel();
  TableRowSorter<DefaultTableModel> modelo2 = new TableRowSorter<>(modelo);
  listado.setRowSorter(modelo2);
  modelo2.setRowFilter(RowFilter.regexFilter(filtro, columna));
 
  }
 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Codigo;
    private javax.swing.JTextField Ganancia;
    private javax.swing.JTextField Marca;
    private javax.swing.JButton buscar;
    private javax.swing.JButton calcular;
    private javax.swing.JButton cerrar;
    private javax.swing.JTextField codigo1;
    private javax.swing.JComboBox<String> comboF;
    private javax.swing.JTextField costo;
    private javax.swing.JButton editar;
    private javax.swing.JButton editar1;
    private javax.swing.JDesktopPane escritorio;
    private javax.swing.JTextField filt;
    private javax.swing.JPanel fondo;
    private javax.swing.JPanel ganancia1;
    private javax.swing.JButton guardar;
    private javax.swing.JButton guardar1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JButton limpiar;
    private javax.swing.JPanel lista;
    private javax.swing.JTable listado;
    private javax.swing.JTextField marca1;
    private javax.swing.JRadioButton no;
    private javax.swing.JTextField pFinal;
    private javax.swing.JTextField pFinal1;
    private javax.swing.JTabbedPane pesta単as;
    private javax.swing.JPanel principal;
    private javax.swing.JTextField producto;
    private javax.swing.JTextField producto1;
    private javax.swing.JButton salir1;
    private javax.swing.JButton salir3;
    private javax.swing.JRadioButton si;
    private javax.swing.JTextField stock;
    private javax.swing.JLabel venc;
    private com.toedter.calendar.JDateChooser vencimiento;
    private javax.swing.JPanel venta;
    // End of variables declaration//GEN-END:variables
}
